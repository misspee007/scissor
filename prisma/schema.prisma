generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  urls      Url[]
}

model Url {
  id         Int        @id @default(autoincrement())
  longUrl    String
  shortUrlId String    @unique
  shortUrl   String
  userId     Int
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  qrCode     QrCode?
  analytics  Analytics?
  user       User       @relation(fields: [userId], references: [id])
}

model QrCode {
  id        Int      @id @default(autoincrement())
  image     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  url       Url      @relation(fields: [urlId], references: [id])
  urlId     Int      @unique
}

model Analytics {
  id        Int      @id @default(autoincrement())
  clickEvents    ClickEvent[]
  clicks    Int     
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  url       Url      @relation(fields: [shortUrlId], references: [shortUrlId])
  shortUrlId     String      @unique
}

model ClickEvent {
  id        Int      @id @default(autoincrement())
  referer  String?
  timestamp DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  analytics Analytics @relation(fields: [analyticsId], references: [id])
  analyticsId Int
}
